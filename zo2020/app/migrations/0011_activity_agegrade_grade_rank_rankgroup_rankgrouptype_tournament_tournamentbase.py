# Generated by Django 3.0.7 on 2020-09-11 10:26

import app.custom.model_fields.YearlessDateField
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0010_auto_20200909_1831'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgeGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open', models.NullBooleanField(default=False)),
                ('under', models.NullBooleanField(default=None)),
                ('age', models.PositiveIntegerField(default=None, null=True)),
                ('date', app.custom.model_fields.YearlessDateField.CustomYearlessDateField(blank=True, max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='RankGroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('competitor_type_name', models.CharField(max_length=20)),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_bases', to='app.Activity')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_bases', to='app.Account')),
                ('hubs', models.ManyToManyField(related_name='tournaments', to='app.Hub')),
            ],
        ),
        migrations.CreateModel(
            name='RankGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
                ('types', models.ManyToManyField(related_name='rank_groups', to='app.RankGroupType')),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
                ('rank_value', models.PositiveIntegerField(blank=True)),
                ('rank_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to='app.RankGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='app.AgeGrade')),
                ('gender', models.ManyToManyField(related_name='grades', to='app.Gender')),
                ('rank', models.ManyToManyField(related_name='grades', to='app.Rank')),
            ],
        ),
    ]
